
application {
  config {
    baseName abf
    applicationType monolith
    packageName py.com.abf
    serviceDiscoveryType no
    authenticationType jwt
    prodDatabaseType postgresql
    devDatabaseType postgresql
    buildTool maven
    clientFramework angular
    languages [es]
  }
  entities *
}


enum EstadosPagos{
 	PAGADO(Pagado)
    PENDIENTE(Pendiente)
    ANULADO(Anulado)
}
enum EstadosPersona{
	 ACTIVO(Activo),
  	 INACTIVO(Inactivo)
}

enum CondicionVenta {
	CONTADO(Contado)
}

enum TipoProductos {
	SERVICIO(Servicio)
	PRODUCTO(Producto)
}

enum TipoFuncionarios{
	PROFESORES(Profesores)
    FUNCIONARIOS(Funcionarios)
    OTRO(Otro)
}

enum Niveles{
	PREAJEDREZ("Pre-Ajedrez")
    INICIAL(Inicial)
    PRINCIPIANTE(Principiante)
    INTERMEDIO(Intermedio)
    AVANZADO(Avanzado)
    TODOS("Todos los niveles")
}

enum EstadosPrestamos{
 	DEVUELTO(Devuelto)
    PRESTADO("En Prestamo")
    VENCIDO("No devuelto") 
}

entity Temas(temas){
	titulo String required,
    descripcion String required
}

entity RegistroClases(registro_clases){
	fecha LocalDate  required
    cantidadHoras Integer required
    asistenciaAlumno Boolean
}

entity Cursos(cursos){
	nombreCurso String required,
    descripcion String required,
    fechaInicio LocalDate,
    fechaFin LocalDate,
  	cantidadClases Integer,
    nivel Niveles required
}

entity Inscripciones(inscripcion){
	fechaInscripcion LocalDate,
}

relationship OneToMany {
	Alumnos to Inscripciones { alumnos(nombreCompleto) required},
    Cursos to Inscripciones  {cursos(nombreCurso) required},
}

entity TiposDocumentos(tipos_documentos){
	codigo String required,
    descripcion String required
}

entity Alumnos(alumnos){
	nombres String required,
	apellidos String required,
    nombreCompleto String required,
	email String,
	telefono String required,
	fechaNacimiento LocalDate required,
	documento String required,
    estado EstadosPersona required,
    elo Integer,
    fideId Integer,
}

entity Funcionarios(funcionarios){
	nombres String required,
	apellidos String required,
    nombreCompleto String required,
	email String required,
	telefono String required,
	fechaNacimiento LocalDate  required,
	documento String required,
    estado EstadosPersona required,
    tipoFuncionario TipoFuncionarios,
    elo Integer,
    fideId Integer,
}

entity Clientes(clientes){
	ruc String,
	nombres String required,
	apellidos String required,
    razonSocial String required,
    documento String required,
	email String,
	telefono String,
	fechaNacimiento LocalDate,
    direccion String
}

entity Facturas(factura){
    fecha LocalDate required,
    facturaNro String required,
    timbrado Integer required,
    puntoExpedicion Integer required,
    sucursal Integer required,
    razonSocial String required,
    ruc String required,
    condicionVenta CondicionVenta required,
	total Integer required
}

entity FacturaDetalle(factura_detalle){
	cantidad Integer,
    precioUnitario Integer,
    subtotal Integer,
	porcentajeIva Integer,
	valorPorcentaje Integer
}

entity Pagos(pagos){
    fecha LocalDate required,
	total Integer required,
    cantidadHoras Integer required
}

entity Productos(productos){
    tipoProducto TipoProductos required,
	precioUnitario Integer required,
	porcentajeIva Integer required,
	descripcion String required
    
}


entity Materiales(materiales){
	descripcion String required,
    cantidad Integer,
    cantidadEnPrestamo Integer,
}


entity Prestamos(prestamos){
    fechaPrestamo LocalDate required,
    fechaDevolucion LocalDate,
	estado EstadosPrestamos required
}

entity Matricula(matricula){
	concepto String required
    monto Integer required
	fechaInscripcion  LocalDate  required
    fechaInicio  LocalDate  required
    fechaPago LocalDate
    estado EstadosPagos required
}

entity Evaluaciones (evaluaciones){
    nroEvaluacion Integer required
	fecha LocalDate required    
}

entity EvaluacionesDetalle(evaluaciones_detalle){
    comentarios String required
    puntaje Integer required
}

entity Timbrados (timbrado) {
	numeroTimbrado Integer required unique
	fechaInicio LocalDate required
    fechaFin LocalDate required  
}
entity Sucursales(sucursales){
	nombreSucursal String required 
    direccion String
    numeroEstablecimiento Integer required
}
entity PuntoDeExpedicion(punto_de_expedicion){
	numeroPuntoDeExpedicion Integer required
}

relationship OneToMany{
		Sucursales to PuntoDeExpedicion { sucursales(nombreSucursal) required }
        Timbrados to Sucursales { timbrados(numeroTimbrado) required }

}

relationship OneToMany {
	Evaluaciones to EvaluacionesDetalle { Evaluaciones(nroEvaluacion) required }
    Alumnos to Evaluaciones{Alumnos(nombreCompleto) required}
    Funcionarios to Evaluaciones {Funcionarios(nombreCompleto) required}
    Temas to EvaluacionesDetalle { Temas(titulo) required}
}

relationship OneToMany {
	Productos to Pagos { producto(descripcion) required }
    Funcionarios to Pagos { funcionario(nombreCompleto) } 
}

relationship OneToMany {
	Alumnos to Matricula { alumno(nombreCompleto) required }
}

relationship OneToMany {
	Productos to FacturaDetalle { producto(descripcion) required }
}

relationship OneToMany {
	Facturas to FacturaDetalle{ factura(facturaNro) required }
}
relationship OneToMany{
	TiposDocumentos to Alumnos { tipoDocumentos(descripcion) required },
}
relationship OneToMany{
    TiposDocumentos to Funcionarios { tipoDocumentos(descripcion) required },
}

relationship OneToMany{
    Materiales to Prestamos {Materiales(descripcion) required},
}
relationship OneToMany{
 	Alumnos to Prestamos {alumnos(nombreCompleto) required},
}

relationship OneToMany{
 	Temas to RegistroClases { temas(descripcion) required},
    Funcionarios to RegistroClases { funcionario(nombreCompleto) required},
    Alumnos to RegistroClases {alumnos(nombreCompleto) required}
}


relationship OneToMany{
 	Temas to Cursos { temas(titulo) required},
}

enum Motivo{
 	ANULACION(Anulacion)
    DEVOLUCION(Devolucion)
    DESCUENTO(Descuento) 
	OTRO(Otro)
}

entity NotaCredito(nota_credito){
    fecha LocalDate required,
    notaNro String required,
    puntoExpedicion Integer required,
    sucursal Integer required,
    razonSocial String required,
    ruc String required,
	direccion String,
    motivoEmision Motivo required,
	total Integer required
}



entity NotaCreditoDetalle(notaCredito_detalle){
	cantidad Integer,
    precioUnitario Integer,
    subtotal Integer,
	porcentajeIva Integer,
	valorPorcentaje Integer,
	
}
relationship OneToMany {
	NotaCredito to NotaCreditoDetalle{ NotaCredito(notaNro) required }
}
relationship OneToMany {
	Productos to NotaCreditoDetalle { producto(descripcion) required }
}

relationship OneToOne {
	NotaCredito { Facturas(facturaNro) required }  to Facturas  
}



service all with serviceClass
service all with serviceImpl
paginate all with pagination
filter all